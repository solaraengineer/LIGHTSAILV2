# Generated by Django 5.2.6 on 2025-10-25 21:54

import django.contrib.auth.models
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.UUIDField(db_column='id', primary_key=True, serialize=False)),
                ('owner_id', models.UUIDField(blank=True, db_column='owner_id', null=True)),
                ('address_id', models.UUIDField(blank=True, db_column='address_id', null=True)),
                ('status', models.TextField(blank=True, db_column='status', null=True)),
                ('attrs', models.JSONField(blank=True, db_column='attrs', null=True)),
                ('created_at', models.DateTimeField(blank=True, db_column='created_at', null=True)),
                ('id_fme', models.TextField(blank=True, db_column='id_fme', null=True)),
                ('fme_levels', models.DecimalField(blank=True, db_column='fme_levels', decimal_places=2, max_digits=10, null=True)),
                ('fme_height', models.DecimalField(blank=True, db_column='fme_height', decimal_places=2, max_digits=10, null=True)),
                ('h3_id', models.TextField(blank=True, db_column='h3_id', null=True)),
                ('h3_res', models.SmallIntegerField(blank=True, db_column='h3_res', null=True)),
                ('name', models.TextField(blank=True, db_column='name', null=True)),
            ],
            options={
                'db_table': '"catalog"."houses"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(unique=True)),
                ('code', models.CharField(max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=150, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
